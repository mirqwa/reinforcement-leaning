import numpy as np
import matplotlib.pyplot as plt


def epsilon_greedy_action(action_values: np.array, epsilon: float) -> int:
    if np.random.random() <= epsilon:
        return np.random.choice(10)
    else:
        return np.argmax(action_values)


def run_single_experiment(epsilon: float):
    mu, sigma = 0, 1
    action_values = np.zeros(10)
    action_counts = np.zeros(10)
    rewards = []
    for _ in range(1000):
        selected_action = epsilon_greedy_action(action_values, epsilon)
        true_value = np.random.normal(mu, sigma, 1)[0]
        actual_reward = np.random.normal(true_value, sigma, 1)[0]
        action_counts[selected_action] += 1
        action_values[selected_action] += actual_reward / (
            action_counts[selected_action]
        )
        rewards.append(action_values[selected_action])
    return rewards


def run_experiments(epsilon: float):
    all_rewards = []
    for _ in range(2000):
        rewards = run_single_experiment(epsilon)
        all_rewards.append(rewards)
    all_rewards = np.array(all_rewards)
    return all_rewards.mean(axis=0)


def run_and_plot_results():
    epsilons = {0: "-g", 0.1: "-b", 0.01: "-r"}
    for epsilon, color in epsilons.items():
        rewards = run_experiments(epsilon)
        x = np.arange(1, len(rewards) + 1)
        plt.plot(x, rewards, color, label=f"Îµ={epsilon}")
    plt.legend()
    plt.show()


if __name__ == "__main__":
    run_and_plot_results()
